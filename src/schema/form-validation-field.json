{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "type": "object",
    "properties": {
        "type": {
            "type": "string",
            "enum": ["array", "date", "mixed", "number", "object", "string"]
        },
        "required": {
            "type": "boolean"
        },
        "message": {
            "type": "string"
        },
        "min": {
            "type": "number"
        },
        "max": {
            "type": "number"
        },
        "positive": {
            "type": "boolean",
            "description": "Validates that the value is a positive number"
        },
        "integer": {
            "type": "boolean",
            "description": "Validates that the value is an integer"
        },
        "oneOf": {
            "type": "array",
            "items": {
                "type": [
                    "string",
                    "number",
                    "boolean",
                    "object",
                    "array",
                    "null"
                ]
            }
        },
        "of": {
            "oneOf": [
                {
                    "$ref": "#"
                },
                {
                    "type": "object",
                    "patternProperties": {
                        ".*": {
                            "$ref": "#"
                        }
                    }
                }
            ],
            "description": "Schema for array items when type is 'array'"
        },
        "shape": {
            "type": "object",
            "patternProperties": {
                ".*": {
                    "oneOf": [
                        {
                            "$ref": "#"
                        },
                        {
                            "type": "object",
                            "patternProperties": {
                                ".*": {
                                    "$ref": "#"
                                }
                            }
                        }
                    ]
                }
            },
            "description": "Schema for object properties when type is 'object'"
        },
        "when": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "is": {
                    "type": [
                        "string",
                        "number",
                        "boolean",
                        "object",
                        "array",
                        "null"
                    ],
                    "description": "Value to compare field against"
                },
                "then": {
                    "$ref": "#"
                },
                "otherwise": {
                    "$ref": "#"
                }
            },
            "required": ["field", "is", "then"]
        }
    },
    "required": ["type"]
}
